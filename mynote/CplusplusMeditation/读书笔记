- # 第二篇 类和继承

  - 只有在程序通过指向基类对象的指针或者基类对象的引用调用虚函数时，才会发生运行时的多态现象。
  - 句柄类：
    - 把一个单一类型的对象与一个与之有某种特定继承关系的任意类型的对象捆绑起来。
    - 通过避免不必要的复制来优化内存管理。

- ## 第4章 类设计者的核查表

  - 是否需要一个构造函数？
    - 构造函数用来隐藏内部工作方式。
    - 只存在显式的非缺省构造函数时，生成该类对象的数组是非法的。

  - 数据成员是否是私有的？
  - 是不是每个构造函数初始化所有的数据成员？
  - 类需要析构函数吗？
  - 类需要一个虚析构函数吗？
    - 虚析构函数通常是空的。

  - 需要复制构造函数吗？
  - 需要一个赋值操作符吗？
  - 赋值操作能正确地将对象赋给对象本身吗？
  - 需要定义关系操作符吗？
  - 删除数组用`delete []`了吗？
  - 复制构造函数和赋值操作符的参数类型中加上const了吗？
  - 函数有引用参数，他们应该是const引用吗？
  - 适当的声明成员函数为const了吗？

- ## 第5章 代理类

  - 作用：继承与容器共用，将整个派生层次压缩在一个对象类型中。
  - 优点：
    - 避免显式地处理内存分配。
    - 保持类在运行时进行绑定的属性。
  - 关键：用类来表示概念——定义一个行为和基类对象相似，而又潜在地表示了所有派生类的对象的东西，记为代理类。

- ## 第6章 句柄：第一部分

  - 代理类的缺陷：每个对象对应一个代理，创建代理就会复制所代理的对象，就像复制代理一样，而有些复制并不是必要的，甚至是有害的。
  - 句柄类的功用：保持代理的多态行为的同时，避免不必要的复制。